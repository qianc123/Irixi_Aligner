<UserControl x:Class="Irixi_Aligner_Common.UserControls.Newport2832cControlPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:local="clr-namespace:Irixi_Aligner_Common.UserControls"
             xmlns:ViewModel="clr-namespace:Irixi_Aligner_Common.ViewModel"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             Height="210" Width="220">
    <UserControl.Resources>

        <!-- Converter Definition -->
        <ViewModel:FormatNewport2832CMeasurementValue x:Key="Format2832CMeasValue"/>
        
        <Style TargetType="{x:Type dxe:ButtonEdit}">
            <Setter Property="MaskType" Value="Numeric"/>
            <Setter Property="AllowDefaultButton" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>
    <Grid IsEnabled="{Binding InstrInstance.IsInitialized}">
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Text="Power" Margin="0,2,0,1"/>
        <TextBox IsReadOnly="True" 
                Grid.Row="1" 
                VerticalContentAlignment="Center" 
                HorizontalContentAlignment="Right" 
                Margin="0" 
                FontSize="24" 
                FontFamily="Microsoft Sans Serif" 
                FontWeight="Bold">
            <TextBox.Text>
                <MultiBinding Converter="{StaticResource Format2832CMeasValue}" Mode="OneWay">
                    <Binding Path="InstrInstance.MetaProperties[0].MeasurementValue"/>
                    <Binding Path="InstrInstance.MetaProperties[0].Unit" />
                </MultiBinding>
            </TextBox.Text>
        </TextBox>
        <StackPanel Grid.Row="1" Margin="5,0,0,0">
            <TextBlock Text="OL" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="Red" FontWeight="Bold" Visibility="{Binding InstrInstance.MetaProperties[0].IsOverRange, Converter={StaticResource BooleanToVisibility}}"/>
            <TextBlock Text="SA" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="Red" FontWeight="Bold" Visibility="{Binding InstrInstance.MetaProperties[0].IsSaturated, Converter={StaticResource BooleanToVisibility}}"/>
            <TextBlock Text="DATA ERR" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="Red" FontWeight="Bold" Visibility="{Binding InstrInstance.MetaProperties[0].IsDataError, Converter={StaticResource BooleanToVisibility}}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Center">
            <RadioButton Content="CH A" VerticalAlignment="Center" Margin="0,0,15,0" Command="{Binding SetActiveChannelToA}"/>
            <RadioButton Content="CH B" VerticalAlignment="Center" Command="{Binding SetActiveChannelToB}"/>
        </StackPanel>
        <dx:GroupFrame Grid.Row="3" Header="Setting">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="ComboBox">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="{x:Type dxe:ButtonInfo}">
                        <Setter Property="GlyphKind" Value="Refresh"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="75"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="Lambda(nm)"/>
                <dxe:ButtonEdit x:Name="txtLambda" Grid.Column="1" Text="{Binding InstrInstance.MetaProperties[0].Lambda, StringFormat=####, Mode=OneWay}">
                    <dxe:ButtonInfo 
                        Command="{Binding SetLambdaA}"
                        CommandParameter="{Binding ElementName=txtLambda, Path=Text, Converter={StaticResource TextToInt}}"/>
                </dxe:ButtonEdit>
                <TextBlock Text="Range" Grid.Row="1"/>
                <ComboBox x:Name="cbxRange" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Ranges}" SelectedIndex="{Binding InstrInstance.MetaProperties[0].Range, Converter={StaticResource EnumToInt}, Mode=OneWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction 
                                        Command="{Binding SetRangeA}"   
                                        CommandParameter="{Binding ElementName=cbxRange, Path=SelectedIndex}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBlock Text="Unit" Grid.Row="2"/>
                <ComboBox x:Name="cbxUnit" Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Units}" SelectedIndex="{Binding InstrInstance.MetaProperties[0].Unit, Converter={StaticResource EnumToInt}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction 
                                        Command="{Binding SetUnitA}"   
                                        CommandParameter="{Binding ElementName=cbxUnit, Path=SelectedIndex}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>
        </dx:GroupFrame>
    </Grid>
</UserControl>
